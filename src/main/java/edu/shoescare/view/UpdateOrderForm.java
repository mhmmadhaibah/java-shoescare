/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.shoescare.view;

import edu.shoescare.model.MyConnection;
import edu.shoescare.model.User;
import edu.shoescare.model.Validator;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author mhmmadhaibah
 */
public class UpdateOrderForm extends javax.swing.JFrame {
    
    private final int orderId;

    /**
     * Creates new form UpdateOrderForm
     * 
     * @param orderId
     */
    public UpdateOrderForm(int orderId) {
        initComponents();
        initIconImage();
        
        this.orderId = orderId;
        initDataOrderForm();
    }
    
    private void initIconImage()
    {
        setIconImage(new ImageIcon(getClass().getResource("/images/favicon.png")).getImage());
    }
    
    private void initDataOrderForm()
    {
        try
        {
            Connection conn = MyConnection.getConnection();
            
            String sqlq = "SELECT * FROM orders WHERE id_order = ?";
            PreparedStatement stmt = conn.prepareStatement(sqlq);
            
            stmt.setInt(1, orderId);
            ResultSet rslt = stmt.executeQuery();
            
            while (rslt.next())
            {
                customerNameField.setText(rslt.getString("name"));
                emailAddressField.setText(rslt.getString("email"));
                phoneNumberField.setText(rslt.getString("phone"));
                numberOfOrdersField.setText(rslt.getString("quantity"));
                initServiceSelected(rslt.getString("services"));
                notesField.setText(rslt.getString("notes"));
            }
        }
        catch (SQLException e)
        {
            e.printStackTrace();
        }
    }
    
    private void initServiceSelected(String text)
    {
        if (text.contains("Standard Cleanser"))
            standardCleanserServiceCheck.setSelected(true);
        if (text.contains("Deep Cleanser"))
            deepCleanserServiceCheck.setSelected(true);
        if (text.contains("Unyellowing"))
            unyellowingServiceCheck.setSelected(true);
        if (text.contains("Waterproof Coating"))
            waterproofCoatingServiceCheck.setSelected(true);
        if (text.contains("Repaint"))
            repaintServiceCheck.setSelected(true);
        if (text.contains("Repair"))
            repairServiceCheck.setSelected(true);
    }

    private String getServiceSelectedText()
    {
        String text = "";
        
        if (standardCleanserServiceCheck.isSelected())
            text = text.concat("Standard Cleanser, ");
        if (deepCleanserServiceCheck.isSelected())
            text = text.concat("Deep Cleanser, ");
        if (unyellowingServiceCheck.isSelected())
            text = text.concat("Unyellowing, ");
        if (waterproofCoatingServiceCheck.isSelected())
            text = text.concat("Waterproof Coating, ");
        if (repaintServiceCheck.isSelected())
            text = text.concat("Repaint, ");
        if (repairServiceCheck.isSelected())
            text = text.concat("Repair, ");
        
        if (text.endsWith(", "))
            text = text.substring(0, text.length() - 2);
        if (!text.endsWith("."))
            text = text.concat(".");
        
        return text;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bodyPanel = new javax.swing.JPanel();
        customerNameLabel = new javax.swing.JLabel();
        customerNameField = new javax.swing.JTextField();
        emailAddressField = new javax.swing.JTextField();
        emailAddressLabel = new javax.swing.JLabel();
        numberOfOrdersLabel = new javax.swing.JLabel();
        numberOfOrdersField = new javax.swing.JTextField();
        phoneNumberLabel = new javax.swing.JLabel();
        phoneNumberField = new javax.swing.JTextField();
        servicesLabel = new javax.swing.JLabel();
        standardCleanserServiceCheck = new javax.swing.JCheckBox();
        deepCleanserServiceCheck = new javax.swing.JCheckBox();
        unyellowingServiceCheck = new javax.swing.JCheckBox();
        waterproofCoatingServiceCheck = new javax.swing.JCheckBox();
        repaintServiceCheck = new javax.swing.JCheckBox();
        repairServiceCheck = new javax.swing.JCheckBox();
        notesLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        notesField = new javax.swing.JTextArea();
        updateButton = new javax.swing.JButton();
        headerPanel = new javax.swing.JPanel();
        headerLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("emha Shoescare");

        customerNameLabel.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        customerNameLabel.setText("Customer Name");

        customerNameField.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        emailAddressField.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        emailAddressLabel.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        emailAddressLabel.setText("Email Address");

        numberOfOrdersLabel.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        numberOfOrdersLabel.setText("Number of Orders");

        numberOfOrdersField.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        phoneNumberLabel.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        phoneNumberLabel.setText("Phone Number");

        phoneNumberField.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        servicesLabel.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        servicesLabel.setText("Services");

        standardCleanserServiceCheck.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        standardCleanserServiceCheck.setText("Standard Cleanser");

        deepCleanserServiceCheck.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        deepCleanserServiceCheck.setText("Deep Cleanser");

        unyellowingServiceCheck.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        unyellowingServiceCheck.setText("Unyellowing");

        waterproofCoatingServiceCheck.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        waterproofCoatingServiceCheck.setText("Waterproof Coating");

        repaintServiceCheck.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        repaintServiceCheck.setText("Repaint");

        repairServiceCheck.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        repairServiceCheck.setText("Repair");

        notesLabel.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        notesLabel.setText("Notes");

        notesField.setColumns(20);
        notesField.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        notesField.setRows(5);
        jScrollPane1.setViewportView(notesField);

        updateButton.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bodyPanelLayout = new javax.swing.GroupLayout(bodyPanel);
        bodyPanel.setLayout(bodyPanelLayout);
        bodyPanelLayout.setHorizontalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bodyPanelLayout.createSequentialGroup()
                                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(customerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(customerNameLabel)
                                    .addComponent(numberOfOrdersLabel))
                                .addGap(18, 18, 18)
                                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(phoneNumberLabel)
                                    .addComponent(emailAddressLabel)
                                    .addComponent(emailAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(servicesLabel)
                            .addGroup(bodyPanelLayout.createSequentialGroup()
                                .addComponent(standardCleanserServiceCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deepCleanserServiceCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unyellowingServiceCheck))
                            .addGroup(bodyPanelLayout.createSequentialGroup()
                                .addComponent(waterproofCoatingServiceCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(repaintServiceCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(repairServiceCheck))
                            .addComponent(notesLabel)
                            .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(bodyPanelLayout.createSequentialGroup()
                                    .addComponent(numberOfOrdersField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(phoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(updateButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        bodyPanelLayout.setVerticalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerNameLabel)
                    .addComponent(emailAddressLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfOrdersLabel)
                    .addComponent(phoneNumberLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfOrdersField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(servicesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(standardCleanserServiceCheck)
                    .addComponent(deepCleanserServiceCheck)
                    .addComponent(unyellowingServiceCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(waterproofCoatingServiceCheck)
                    .addComponent(repaintServiceCheck)
                    .addComponent(repairServiceCheck))
                .addGap(18, 18, 18)
                .addComponent(notesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updateButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        headerLabel.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        headerLabel.setText("Update Order");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(headerLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(headerLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(150, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(150, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        String customerName = customerNameField.getText().trim();
        String emailAddress = emailAddressField.getText().trim();
        String phoneNumber = phoneNumberField.getText().trim();
        String numberOfOrders = numberOfOrdersField.getText().trim();
        String serviceSelected = getServiceSelectedText();
        String customerNotes = notesField.getText().trim();
        
        if (!"".equals(customerName)
                && !"".equals(emailAddress)
                && !"".equals(phoneNumber)
                && !"".equals(numberOfOrders)
                && !"".equals(serviceSelected)
                && !"".equals(customerNotes))
        {
            if (Validator.isEmail(emailAddress) && Validator.isPhoneNumber(phoneNumber) && Validator.isNumeric(numberOfOrders))
            {
                try
                {
                    Connection conn = MyConnection.getConnection();
                    
                    String sqlq = "UPDATE orders SET name = ?, email = ?, phone = ?, quantity = ?, services = ?, notes = ?, updated_by_id_user = ? WHERE id_order = ?";
                    PreparedStatement stmt = conn.prepareStatement(sqlq);
                    
                    stmt.setString(1, customerName);
                    stmt.setString(2, emailAddress);
                    stmt.setString(3, phoneNumber);
                    stmt.setInt(4, Integer.valueOf(numberOfOrders));
                    stmt.setString(5, serviceSelected);
                    stmt.setString(6, customerNotes);
                    stmt.setInt(7, User.getUserId());
                    stmt.setInt(8, orderId);
                    int rslt = stmt.executeUpdate();
                    
                    if (rslt > 0)
                    {
                        JOptionPane.showMessageDialog(updateButton, "Order-data updated successfully.");
                        dispose();
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(updateButton, "Something wrong!");
                    }
                }
                catch (SQLException e)
                {
                    e.printStackTrace();
                }
            }
            else
            {
                JOptionPane.showMessageDialog(updateButton, "Email must be valid. Phone number and number of orders must be numbers.");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(updateButton, "Please enter the data completely!");
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateOrderForm(0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JTextField customerNameField;
    private javax.swing.JLabel customerNameLabel;
    private javax.swing.JCheckBox deepCleanserServiceCheck;
    private javax.swing.JTextField emailAddressField;
    private javax.swing.JLabel emailAddressLabel;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea notesField;
    private javax.swing.JLabel notesLabel;
    private javax.swing.JTextField numberOfOrdersField;
    private javax.swing.JLabel numberOfOrdersLabel;
    private javax.swing.JTextField phoneNumberField;
    private javax.swing.JLabel phoneNumberLabel;
    private javax.swing.JCheckBox repaintServiceCheck;
    private javax.swing.JCheckBox repairServiceCheck;
    private javax.swing.JLabel servicesLabel;
    private javax.swing.JCheckBox standardCleanserServiceCheck;
    private javax.swing.JCheckBox unyellowingServiceCheck;
    private javax.swing.JButton updateButton;
    private javax.swing.JCheckBox waterproofCoatingServiceCheck;
    // End of variables declaration//GEN-END:variables
}
